{\rtf1\ansi\ansicpg1252\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red212\green34\blue255;\red0\green0\blue0;\red209\green113\blue37;
\red178\green48\blue128;\red119\green117\blue165;\red224\green51\blue34;}
{\*\expandedcolortbl;;\cssrgb\c87269\c29650\c100000;\csgray\c0;\cssrgb\c85991\c52029\c18734;
\cssrgb\c75800\c28661\c57528;\cssrgb\c54197\c53905\c70624;\cssrgb\c91311\c29126\c17209;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 import\cf3  json\
\cf2 import\cf3  numpy \cf2 as\cf3  np\
\cf2 import\cf3  os\
\cf2 from\cf3  collections \cf2 import\cf3  defaultdict\
\
\cf4 captions_file\cf3  = \cf5 'annotations/captions_val2014.json'\cf3 \
\
\cf4 captions_file_image_ids\cf3  = []\
\cf2 with\cf3  \cf6 open\cf3 (captions_file) \cf2 as\cf3  f:\
    \cf4 data\cf3  = json.load(f)\
\cf2 for\cf3  entry \cf2 in\cf3  data[\cf5 'annotations'\cf3 ]:\
    captions_file_image_ids.append(entry[\cf5 'image_id'\cf3 ])\
\
\cf2 print\cf3 (\cf5 'number of captions:'\cf3 , \cf6 len\cf3 (data[\cf5 'annotations'\cf3 ]))\
\cf2 print\cf3 (\cf5 'number of ids:'\cf3 , \cf6 len\cf3 (captions_file_image_ids))\
\cf2 print\cf3 (\cf5 'number of unique ids:'\cf3 , \cf6 len\cf3 (np.unique(captions_file_image_ids)))\
\cf2 print\cf3 (\cf5 'num_captions / 5:'\cf3 , \cf6 len\cf3 (data[\cf5 'annotations'\cf3 ]) / 5.0)\
\
\cf7 # count frequencies                                                                                 \cf3 \\\
\cf7                                                                                                      \cf3 \
\cf4 d\cf3  = defaultdict(\cf6 int\cf3 )\
\cf2 for\cf3  \cf6 id\cf3  \cf2 in\cf3  captions_file_image_ids:\
    \cf4 d\cf3 [\cf6 id\cf3 ] += 1\
\cf4 frequencies\cf3  = [d[key] \cf2 for\cf3  key \cf2 in\cf3  d]\
\cf7 # count frequencies of frequencies                                                                  \cf3 \\\
\cf7                                                                                                      \cf3 \
\cf4 d2\cf3  = defaultdict(\cf6 int\cf3 )\
\cf2 for\cf3  count \cf2 in\cf3  frequencies:\
    \cf4 d2\cf3 [count] += 1\
\cf2 print\cf3 (\cf5 'frequencies:'\cf3 , d2)\
\
\cf2 print\cf3 (\cf5 '------------'\cf3 )\
\cf4 images_dir\cf3  = \cf5 '/home/sseal2/val2014'\cf3 \
\cf4 contents\cf3  = os.listdir(images_dir)\
\cf2 print\cf3 (\cf5 'length of all contents:'\cf3 , \cf6 len\cf3 (contents))\
\cf2 print\cf3 (\cf5 'number of dirs:'\cf3 , np.count_nonzero([os.path.isdir(x) \cf2 for\cf3  x \cf2 in\cf3  contents]))\
\cf2 print\cf3 (\cf5 'number that end in jpg:'\cf3 , np.count_nonzero([x.endswith(\cf5 '.jpg'\cf3 ) \cf2 for\cf3  x \cf2 in\cf3  contents]))\
\
\cf2 print\cf3 (\cf5 '-------------------'\cf3 )\
\cf4 image_ids\cf3  = [x.replace(\cf5 '.jpg'\cf3 , \cf5 ''\cf3 ) \cf2 for\cf3  x \cf2 in\cf3  contents]\
\cf4 image_ids\cf3  = [x.split(\cf5 '_'\cf3 )[-1] \cf2 for\cf3  x \cf2 in\cf3  image_ids]\
\cf4 image_ids\cf3  = [\cf6 str\cf3 (\cf6 int\cf3 (x)) \cf2 for\cf3  x \cf2 in\cf3  image_ids]\
\cf4 captions_file_image_ids\cf3  = [\cf6 str\cf3 (\cf6 int\cf3 (x)) \cf2 for\cf3  x \cf2 in\cf3  captions_file_image_ids]\
\cf4 image_ids\cf3  = \cf6 set\cf3 (image_ids)\
\cf4 captions_file_image_ids\cf3  = \cf6 set\cf3 (captions_file_image_ids)\
\cf2 print\cf3 (\cf5 'len(image_ids):'\cf3 , \cf6 len\cf3 (image_ids))\
\cf2 print\cf3 (\cf5 'len(captions_file_image_ids):'\cf3 , \cf6 len\cf3 (captions_file_image_ids))\
\cf4 intersection_set\cf3  = image_ids.intersection(captions_file_image_ids)\
\cf2 print\cf3 (\cf5 'len(intersection):'\cf3 , \cf6 len\cf3 (intersection_set))}